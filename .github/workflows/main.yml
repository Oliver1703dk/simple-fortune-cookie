name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.17' 

    - name: Install dependencies for backend
      working-directory: ./backend
      run: go mod tidy

    - name: Build the project backend 
      working-directory: ./backend
      run: go build  

    - name: Install dependencies for frontend
      working-directory: ./frontend
      run: go mod tidy

    - name: Build the project frontend
      working-directory: ./frontend
      run: go build 
      

  DockerBuild: 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend 
          dockerfile: ./frontend/Dockerfile 
          push: true
          tags: |
            oliver1703dk/frontendimagev2:latest
            
      - name: Build and push Docker image backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend 
          dockerfile: ./backend/Dockerfile 
          push: true
          tags: |
            oliver1703dk/backendimagev2:latest

  Test:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with: 
        go-version: '^1.17'
        
    - name: Run tests for frontend
      working-directory: ./frontend
      run: go test ./...

    - name: Deploy Application
      run: |
        docker compose up -d

    - name: Grant execute permissions to test_script.sh
      run: chmod +x ./test_script.sh

    - name: Run Availability Test
      run: ./test_script.sh

    - name: Tear down Application
      if: failure() || success()
      run: |
        docker compose down

  
  Linting: 
    runs-on: ubuntu-latest
    needs: [Build]
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with: 
        go-version: '^1.17'

    - name: run linting
      uses: super-linter/super-linter/slim@v5 
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DISABLE_ERRORS: true 

  Deploy:
    runs-on: ubuntu-latest
    needs: [Test, Linting]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig

      - name: Deploy to Kubernetes
        run: ./deploy.sh
  
